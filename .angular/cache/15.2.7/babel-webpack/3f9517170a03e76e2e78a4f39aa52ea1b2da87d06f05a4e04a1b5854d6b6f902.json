{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport { Subject, catchError, of, switchMap, takeUntil } from 'rxjs';\nimport { AddPost } from 'src/app/store/action/action';\nimport { getPostSelector } from 'src/app/store/selectors/selector';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"src/app/service/post.service\";\nimport * as i3 from \"@ngrx/store\";\nimport * as i4 from \"@angular/common\";\nconst _c0 = function (a0) {\n  return {\n    \"selectedPost\": a0\n  };\n};\nfunction PostComponent_div_11_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r6 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 8);\n    i0.ɵɵlistener(\"click\", function PostComponent_div_11_div_1_Template_div_click_0_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r6);\n      const post_r3 = restoredCtx.$implicit;\n      const ctx_r5 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r5.onSelectedPost(post_r3));\n    });\n    i0.ɵɵtext(1);\n    i0.ɵɵelementStart(2, \"button\", 9);\n    i0.ɵɵlistener(\"click\", function PostComponent_div_11_div_1_Template_button_click_2_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r6);\n      const post_r3 = restoredCtx.$implicit;\n      const ctx_r7 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r7.onDeletePost(post_r3.id));\n    });\n    i0.ɵɵtext(3, \"Delete\");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const post_r3 = ctx.$implicit;\n    const selectedPost_r1 = i0.ɵɵnextContext().ngIf;\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(3, _c0, post_r3.id === selectedPost_r1.id));\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate2(\" \", post_r3.title, \" \", post_r3.description, \" \");\n  }\n}\nfunction PostComponent_div_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtemplate(1, PostComponent_div_11_div_1_Template, 4, 5, \"div\", 7);\n    i0.ɵɵpipe(2, \"async\");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpipeBind1(2, 1, ctx_r0.posts$));\n  }\n}\nexport class PostComponent {\n  constructor(formBuilder, postService, store) {\n    this.formBuilder = formBuilder;\n    this.postService = postService;\n    this.store = store;\n    this.destroy$ = new Subject();\n    this.selectedPost$ = this.store.select(getPostSelector);\n  }\n  ngOnInit() {\n    this.postForm = this.formBuilder.group({\n      title: ['', Validators.required],\n      description: ['', Validators.required]\n    });\n    this.getPost();\n  }\n  onSelectedPost(post) {\n    this.store.dispatch(new AddPost(post));\n    this.selectedPost$.subscribe(() => {\n      console.log(\"select\", this.selectedPost$);\n    });\n  }\n  onSubmit() {\n    this.postService.addPost(this.postForm.value).pipe(switchMap(() => this.getPost())).subscribe(response => {\n      console.log(response);\n      this.postForm.reset();\n    }, error => {\n      alert(error.message);\n    });\n  }\n  onDeletePost(postId) {\n    if (!confirm('Are you sure you want delete this post?')) {\n      return;\n    }\n    this.postService.deletePost(postId).pipe(takeUntil(this.destroy$), switchMap(() => this.getPost())).subscribe(response => {\n      console.log(response);\n    }, error => {\n      alert(error.message);\n    });\n  }\n  getPost() {\n    return this.posts$ = this.postService.getAllPost().pipe(catchError(error => {\n      console.log(error);\n      return of([]);\n    }));\n  }\n  ngOnDestroy() {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n}\nPostComponent.ɵfac = function PostComponent_Factory(t) {\n  return new (t || PostComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.PostService), i0.ɵɵdirectiveInject(i3.Store));\n};\nPostComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: PostComponent,\n  selectors: [[\"app-post\"]],\n  decls: 13,\n  vars: 5,\n  consts: [[3, \"formGroup\", \"ngSubmit\"], [\"for\", \"title\"], [\"type\", \"text\", \"id\", \"title\", \"formControlName\", \"title\"], [\"for\", \"description\"], [\"type\", \"text\", \"id\", \"description\", \"formControlName\", \"description\"], [\"type\", \"submit\", 3, \"disabled\"], [4, \"ngIf\"], [3, \"ngClass\", \"click\", 4, \"ngFor\", \"ngForOf\"], [3, \"ngClass\", \"click\"], [3, \"click\"]],\n  template: function PostComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"form\", 0);\n      i0.ɵɵlistener(\"ngSubmit\", function PostComponent_Template_form_ngSubmit_0_listener() {\n        return ctx.onSubmit();\n      });\n      i0.ɵɵelementStart(1, \"div\")(2, \"label\", 1);\n      i0.ɵɵtext(3, \"Title\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(4, \"input\", 2);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(5, \"div\")(6, \"label\", 3);\n      i0.ɵɵtext(7, \"Description\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(8, \"input\", 4);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(9, \"button\", 5);\n      i0.ɵɵtext(10, \"Add\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵtemplate(11, PostComponent_div_11_Template, 3, 3, \"div\", 6);\n      i0.ɵɵpipe(12, \"async\");\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"formGroup\", ctx.postForm);\n      i0.ɵɵadvance(9);\n      i0.ɵɵproperty(\"disabled\", !ctx.postForm.valid);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", i0.ɵɵpipeBind1(12, 3, ctx.selectedPost$));\n    }\n  },\n  dependencies: [i4.NgClass, i4.NgForOf, i4.NgIf, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName, i4.AsyncPipe],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"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","names":["Validators","Subject","catchError","of","switchMap","takeUntil","AddPost","getPostSelector","i0","PostComponent","constructor","formBuilder","postService","store","select","ngOnInit","postForm","group","title","required","description","getPost","onSelectedPost","post","dispatch","selectedPost$","subscribe","console","log","onSubmit","addPost","value","pipe","response","reset","error","alert","message","onDeletePost","postId","confirm","deletePost","destroy$","posts$","getAllPost","ngOnDestroy","next","complete","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\Desktop\\Ang\\project\\src\\app\\component\\post\\post.component.ts","C:\\Desktop\\Ang\\project\\src\\app\\component\\post\\post.component.html"],"sourcesContent":["import { HttpErrorResponse } from '@angular/common/http';\nimport { Component } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms'\nimport { Store } from '@ngrx/store';\nimport { Observable, Subject, catchError, from, mergeMap, of, switchMap, takeUntil, tap, throwError } from 'rxjs';\nimport { Post } from 'src/app/interface/interface.post';\nimport { PostService } from 'src/app/service/post.service';\nimport { AddPost } from 'src/app/store/action/action';\nimport { getPostSelector } from 'src/app/store/selectors/selector';\nimport { AppState } from 'src/app/store/state/app.state';\n@Component({\n  selector: 'app-post',\n  templateUrl: './post.component.html',\n  styleUrls: ['./post.component.css']\n})\nexport class PostComponent {\n\n  postForm: FormGroup\n  posts$: Observable<Post[]>;\n  private destroy$: Subject<void> = new Subject<void>();\n  selectedPost$: Observable<Post> = this.store.select(getPostSelector)\n\n  constructor(private formBuilder: FormBuilder, private postService: PostService,\n    private store: Store<AppState>) { }\n\n\n  ngOnInit(): void {\n    this.postForm = this.formBuilder.group({\n      title: ['', Validators.required],\n      description: ['', Validators.required]\n    });\n    this.getPost();\n  }\n\n  onSelectedPost(post: any) {\n    this.store.dispatch(new AddPost(post));\n    this.selectedPost$.subscribe(() => {\n      console.log(\"select\", this.selectedPost$);\n    });\n  }\n\n  onSubmit() {\n    this.postService.addPost(this.postForm.value).pipe(\n      switchMap(() => this.getPost())\n    ).subscribe(\n      (response: Post[]) => {\n        console.log(response);\n        this.postForm.reset();\n      },\n      (error: HttpErrorResponse) => {\n        alert(error.message);\n      }\n    )\n  };\n\n\n  onDeletePost(postId: number): void {\n    if (!confirm('Are you sure you want delete this post?')) {\n      return;\n    }\n    this.postService.deletePost(postId).pipe(\n      takeUntil(this.destroy$),\n      switchMap(() => this.getPost())\n    ).subscribe(\n      (response: Post[]) => {\n        console.log(response);\n      },\n      (error: HttpErrorResponse) => {\n        alert(error.message);\n      }\n    )\n  }\n\n  getPost(): Observable<Post[]> {\n    return this.posts$ = this.postService.getAllPost().pipe(\n      catchError(error => {\n        console.log(error);\n        return of([]);\n      })\n    );\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n\n}\n","<form [formGroup]=\"postForm\" (ngSubmit)=\"onSubmit()\">\n\n<div>\n    <label for=\"title\">Title</label>\n    <input type=\"text\" id=\"title\" formControlName=\"title\">\n</div>\n\n<div>\n    <label for=\"description\">Description</label>\n    <input type=\"text\" id=\"description\" formControlName=\"description\">\n</div>\n<button type=\"submit\" [disabled]=\"!postForm.valid\">Add</button>\n</form>\n\n<div *ngIf=\"selectedPost$ | async as selectedPost \">\n    <div *ngFor=\"let post of posts$ | async as posts$\"\n    [ngClass]=\"{'selectedPost': post.id === selectedPost.id}\"\n    (click)=\"onSelectedPost(post)\">\n        {{post.title}}\n        {{post.description}}\n        <button (click)=\"onDeletePost(post.id)\">Delete</button>\n    </div>    \n</div>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}