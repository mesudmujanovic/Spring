{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport { Subject, catchError, of, switchMap, takeUntil } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"src/app/service/post.service\";\nimport * as i3 from \"@angular/common\";\nfunction PostComponent_div_11_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementStart(2, \"button\", 11);\n    i0.ɵɵlistener(\"click\", function PostComponent_div_11_Template_button_click_2_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r4);\n      const post_r1 = restoredCtx.$implicit;\n      const ctx_r3 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r3.onDeletePost(post_r1.id));\n    });\n    i0.ɵɵtext(3, \"Delete\");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const post_r1 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate2(\" \", post_r1.title, \" \", post_r1.description, \" \");\n  }\n}\nexport class PostComponent {\n  constructor(formBuilder, postService) {\n    this.formBuilder = formBuilder;\n    this.postService = postService;\n    this.destroy$ = new Subject();\n  }\n  onFileSelected(event) {\n    this.selectedFile = event.target.files[0];\n  }\n  ngOnInit() {\n    this.postForm = this.formBuilder.group({\n      title: ['', Validators.required],\n      description: ['', Validators.required]\n    });\n    this.getPost();\n  }\n  onDeletePost(postId) {\n    if (!confirm('Are you sure you want delete this post?')) {\n      return;\n    }\n    this.postService.deletePost(postId).pipe(takeUntil(this.destroy$), switchMap(() => this.getPost())).subscribe(response => {\n      console.log(response);\n    }, error => {\n      alert(error.message);\n    });\n  }\n  getPost() {\n    return this.posts$ = this.postService.getAllPost().pipe(catchError(error => {\n      console.log(error);\n      return of([]);\n    }));\n  }\n  ngOnDestroy() {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n}\nPostComponent.ɵfac = function PostComponent_Factory(t) {\n  return new (t || PostComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.PostService));\n};\nPostComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: PostComponent,\n  selectors: [[\"app-post\"]],\n  decls: 27,\n  vars: 6,\n  consts: [[3, \"formGroup\", \"ngSubmit\"], [\"for\", \"title\"], [\"type\", \"text\", \"id\", \"title\", \"formControlName\", \"title\"], [\"for\", \"description\"], [\"type\", \"text\", \"id\", \"description\", \"formControlName\", \"description\"], [\"type\", \"submit\", 3, \"disabled\"], [4, \"ngFor\", \"ngForOf\"], [\"for\", \"body\"], [\"id\", \"body\", \"formControlName\", \"body\"], [\"type\", \"file\", 3, \"change\"], [\"type\", \"submit\"], [3, \"click\"]],\n  template: function PostComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"form\", 0);\n      i0.ɵɵlistener(\"ngSubmit\", function PostComponent_Template_form_ngSubmit_0_listener() {\n        return ctx.onSubmit();\n      });\n      i0.ɵɵelementStart(1, \"div\")(2, \"label\", 1);\n      i0.ɵɵtext(3, \"Title\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(4, \"input\", 2);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(5, \"div\")(6, \"label\", 3);\n      i0.ɵɵtext(7, \"Description\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(8, \"input\", 4);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(9, \"button\", 5);\n      i0.ɵɵtext(10, \"Add\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵtemplate(11, PostComponent_div_11_Template, 4, 2, \"div\", 6);\n      i0.ɵɵpipe(12, \"async\");\n      i0.ɵɵelementStart(13, \"form\", 0);\n      i0.ɵɵlistener(\"ngSubmit\", function PostComponent_Template_form_ngSubmit_13_listener() {\n        return ctx.onSubmit();\n      });\n      i0.ɵɵelementStart(14, \"div\")(15, \"label\", 1);\n      i0.ɵɵtext(16, \"Title:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(17, \"input\", 2);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(18, \"div\")(19, \"label\", 7);\n      i0.ɵɵtext(20, \"Body:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(21, \"textarea\", 8);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(22, \"div\")(23, \"input\", 9);\n      i0.ɵɵlistener(\"change\", function PostComponent_Template_input_change_23_listener($event) {\n        return ctx.onFileSelected($event);\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(24, \"div\")(25, \"button\", 10);\n      i0.ɵɵtext(26, \"Submit\");\n      i0.ɵɵelementEnd()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"formGroup\", ctx.postForm);\n      i0.ɵɵadvance(9);\n      i0.ɵɵproperty(\"disabled\", !ctx.postForm.valid);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpipeBind1(12, 4, ctx.posts$));\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"formGroup\", ctx.postForm);\n    }\n  },\n  dependencies: [i3.NgForOf, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName, i3.AsyncPipe],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"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","names":["Validators","Subject","catchError","of","switchMap","takeUntil","i0","PostComponent","constructor","formBuilder","postService","onFileSelected","event","selectedFile","target","files","ngOnInit","postForm","group","title","required","description","getPost","onDeletePost","postId","confirm","deletePost","pipe","destroy$","subscribe","response","console","log","error","alert","message","posts$","getAllPost","ngOnDestroy","next","complete","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\Desktop\\Ang\\project\\src\\app\\component\\post\\post.component.ts","C:\\Desktop\\Ang\\project\\src\\app\\component\\post\\post.component.html"],"sourcesContent":["import { HttpErrorResponse } from '@angular/common/http';\nimport { Component } from '@angular/core';\nimport{FormGroup,FormBuilder,Validators} from '@angular/forms'\nimport { Observable, Subject, catchError, from, mergeMap, of, switchMap, takeUntil, tap, throwError } from 'rxjs';\nimport { Post } from 'src/app/interface/interface.post';\nimport { PostService } from 'src/app/service/post.service';\n@Component({\n  selector: 'app-post',\n  templateUrl: './post.component.html',\n  styleUrls: ['./post.component.css']\n})\nexport class PostComponent{\n\npostForm:FormGroup\nposts$: Observable<Post[]>;\nprivate destroy$:Subject<void> = new Subject<void>();\nselectedFile: File;\n\nconstructor(private formBuilder:FormBuilder,private postService:PostService){}\n\n\n\nonFileSelected(event: any): void {\n  this.selectedFile = event.target.files[0];\n}\n\n\nngOnInit():void{\n  this.postForm = this.formBuilder.group({\n    title:['',Validators.required],\n    description:['',Validators.required]\n  });\nthis.getPost();\n}\n\n\n\nonDeletePost(postId:number):void{\n  if(!confirm('Are you sure you want delete this post?')){\n    return;\n  }\n  this.postService.deletePost(postId).pipe(\n    takeUntil(this.destroy$),\n    switchMap(()=> this.getPost())\n  ).subscribe(\n    (response: Post[])=>{\n      console.log(response);\n    },\n    (error: HttpErrorResponse) => {\n      alert(error.message);\n    }\n  )\n}\n\ngetPost():Observable<Post[]>{\n return this.posts$ = this.postService.getAllPost().pipe(\n  catchError(error => {\n    console.log(error);\n    return of([]);\n  })\n );\n}\n\nngOnDestroy(): void {\n  this.destroy$.next();\n  this.destroy$.complete();\n}\n\n\n}\n","<form [formGroup]=\"postForm\" (ngSubmit)=\"onSubmit()\">\n\n<div>\n    <label for=\"title\">Title</label>\n    <input type=\"text\" id=\"title\" formControlName=\"title\">\n</div>\n\n<div>\n    <label for=\"description\">Description</label>\n    <input type=\"text\" id=\"description\" formControlName=\"description\">\n</div>\n<button type=\"submit\" [disabled]=\"!postForm.valid\">Add</button>\n</form>\n\n<div *ngFor=\"let post of posts$ | async as posts$\">\n    {{post.title}}\n    {{post.description}}\n    <button (click)=\"onDeletePost(post.id)\">Delete</button>\n</div>\n\n\n<form [formGroup]=\"postForm\" (ngSubmit)=\"onSubmit()\">\n    <div>\n      <label for=\"title\">Title:</label>\n      <input type=\"text\" id=\"title\" formControlName=\"title\">\n    </div>\n    <div>\n      <label for=\"body\">Body:</label>\n      <textarea id=\"body\" formControlName=\"body\"></textarea>\n    </div>\n    <div>\n      <input type=\"file\" (change)=\"onFileSelected($event)\">\n    </div>\n    <div>\n      <button type=\"submit\">Submit</button>\n    </div>\n  </form>\n  "]},"metadata":{},"sourceType":"module","externalDependencies":[]}