{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"src/app/service/post.service\";\nimport * as i3 from \"@angular/common\";\nfunction PostComponent_div_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"div\");\n  }\n}\nexport class PostComponent {\n  constructor(formBuilder, postService) {\n    this.formBuilder = formBuilder;\n    this.postService = postService;\n  }\n  ngOnInit() {\n    this.postForm = this.formBuilder.group({\n      title: ['', Validators.required],\n      description: ['', Validators.required]\n    });\n    this.getPost();\n  }\n  onSubmit() {\n    this.postService.addPost(this.postForm.value).subscribe(response => {\n      console.log(response);\n    }, error => {\n      console.log(error);\n    });\n  }\n  getPost() {\n    this.posts$ = this.postService.getAllPost();\n  }\n}\nPostComponent.ɵfac = function PostComponent_Factory(t) {\n  return new (t || PostComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.PostService));\n};\nPostComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: PostComponent,\n  selectors: [[\"app-post\"]],\n  decls: 13,\n  vars: 5,\n  consts: [[3, \"formGroup\", \"ngSubmit\"], [\"for\", \"title\"], [\"type\", \"text\", \"id\", \"title\", \"formControlName\", \"title\"], [\"for\", \"description\"], [\"type\", \"text\", \"id\", \"description\", \"formControlName\", \"description\"], [\"type\", \"submit\", 3, \"disabled\"], [4, \"ngFor\", \"ngForOf\"]],\n  template: function PostComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"form\", 0);\n      i0.ɵɵlistener(\"ngSubmit\", function PostComponent_Template_form_ngSubmit_0_listener() {\n        return ctx.onSubmit();\n      });\n      i0.ɵɵelementStart(1, \"div\")(2, \"label\", 1);\n      i0.ɵɵtext(3, \"Title\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(4, \"input\", 2);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(5, \"div\")(6, \"label\", 3);\n      i0.ɵɵtext(7, \"Description\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(8, \"input\", 4);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(9, \"button\", 5);\n      i0.ɵɵtext(10, \"Add\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵtemplate(11, PostComponent_div_11_Template, 1, 0, \"div\", 6);\n      i0.ɵɵpipe(12, \"async\");\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"formGroup\", ctx.postForm);\n      i0.ɵɵadvance(9);\n      i0.ɵɵproperty(\"disabled\", !ctx.postForm.valid);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpipeBind1(12, 3, ctx.posts$));\n    }\n  },\n  dependencies: [i3.NgForOf, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName, i3.AsyncPipe],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"AAEA,SAA6BA,UAAU,QAAO,gBAAgB;;;;;;;ICY9DC,sBAGM;;;ADNN,OAAM,MAAOC,aAAa;EAK1BC,YAAoBC,WAAuB,EAASC,WAAuB;IAAvD,gBAAW,GAAXD,WAAW;IAAqB,gBAAW,GAAXC,WAAW;EAAc;EAE7EC,QAAQ;IACN,IAAI,CAACC,QAAQ,GAAG,IAAI,CAACH,WAAW,CAACI,KAAK,CAAC;MACrCC,KAAK,EAAC,CAAC,EAAE,EAACT,UAAU,CAACU,QAAQ,CAAC;MAC9BC,WAAW,EAAC,CAAC,EAAE,EAACX,UAAU,CAACU,QAAQ;KACpC,CAAC;IACJ,IAAI,CAACE,OAAO,EAAE;EACd;EAEAC,QAAQ;IACN,IAAI,CAACR,WAAW,CAACS,OAAO,CAAC,IAAI,CAACP,QAAQ,CAACQ,KAAK,CAAC,CAACC,SAAS,CACpDC,QAAc,IAAG;MAChBC,OAAO,CAACC,GAAG,CAACF,QAAQ,CAAC;IACvB,CAAC,EACAG,KAAS,IAAG;MACXF,OAAO,CAACC,GAAG,CAACC,KAAK,CAAC;IACpB,CAAC,CACF;EACH;EAGOR,OAAO;IACb,IAAI,CAACS,MAAM,GAAG,IAAI,CAAChB,WAAW,CAACiB,UAAU,EAAE;EAC5C;;AA7BapB,aAAa;mBAAbA,aAAa;AAAA;AAAbA,aAAa;QAAbA,aAAa;EAAAqB;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCX1B1B,+BAAqD;MAAxBA;QAAA,OAAY2B,cAAU;MAAA,EAAC;MAEpD3B,2BAAK;MACkBA,qBAAK;MAAAA,iBAAQ;MAChCA,2BAAsD;MAC1DA,iBAAM;MAENA,2BAAK;MACwBA,2BAAW;MAAAA,iBAAQ;MAC5CA,2BAAkE;MACtEA,iBAAM;MACNA,iCAAmD;MAAAA,oBAAG;MAAAA,iBAAS;MAG/DA,gEAGM;;;;MAjBAA,wCAAsB;MAWNA,eAA4B;MAA5BA,8CAA4B;MAG5BA,eAAkB;MAAlBA,2DAAkB","names":["Validators","i0","PostComponent","constructor","formBuilder","postService","ngOnInit","postForm","group","title","required","description","getPost","onSubmit","addPost","value","subscribe","response","console","log","error","posts$","getAllPost","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\Desktop\\Ang\\project\\src\\app\\component\\post\\post.component.ts","C:\\Desktop\\Ang\\project\\src\\app\\component\\post\\post.component.html"],"sourcesContent":["import { publishFacade } from '@angular/compiler';\nimport { Component } from '@angular/core';\nimport{FormGroup,FormBuilder,Validators} from '@angular/forms'\nimport { Observable, from } from 'rxjs';\nimport { Post } from 'src/app/interface/interface.post';\nimport { PostService } from 'src/app/service/post.service';\n@Component({\n  selector: 'app-post',\n  templateUrl: './post.component.html',\n  styleUrls: ['./post.component.css']\n})\nexport class PostComponent {\n\npostForm:FormGroup\nposts$: Observable<Post[]>;\n\nconstructor(private formBuilder:FormBuilder,private postService:PostService){}\n\nngOnInit(){\n  this.postForm = this.formBuilder.group({\n    title:['',Validators.required],\n    description:['',Validators.required]\n  });\nthis.getPost();\n}\n\nonSubmit(){\n  this.postService.addPost(this.postForm.value).subscribe(\n    (response: Post)=>{\n      console.log(response);\n    },\n    (error:any)=>{\n      console.log(error);\n    }\n  )\n};\n\n\npublic getPost():void{\n this.posts$ = this.postService.getAllPost();\n}\n\n}\n","<form [formGroup]=\"postForm\" (ngSubmit)=\"onSubmit()\">\n\n<div>\n    <label for=\"title\">Title</label>\n    <input type=\"text\" id=\"title\" formControlName=\"title\">\n</div>\n\n<div>\n    <label for=\"description\">Description</label>\n    <input type=\"text\" id=\"description\" formControlName=\"description\">\n</div>\n<button type=\"submit\" [disabled]=\"!postForm.valid\">Add</button>\n</form>\n\n<div *ngFor=\"let post of posts$ | async as posts$\">\n    <!-- {{post.title}}\n    {{post.description}} -->\n</div>\n\n<!-- <div *ngFor=\"let post of posts\">\n    {{post.title}}\n    {{post.description}}\n</div> -->"]},"metadata":{},"sourceType":"module","externalDependencies":[]}